# Generated by Django 5.2.4 on 2025-08-08 12:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('faceapp', '0011_repeatattendance_sessionprogress'),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='sessionprogress',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='sessionprogress',
            name='person',
        ),
        migrations.CreateModel(
            name='HS1_Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateField(auto_now_add=True)),
                ('day_number', models.IntegerField(help_text='Day 1 or 2 of HS1')),
                ('is_completed', models.BooleanField(default=False, help_text='True when both days completed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hs1_attendance', to='faceapp.knownperson')),
                ('session_reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faceapp.tejgyansession')),
            ],
            options={
                'verbose_name': 'Higher Shivir 1 Attendance',
                'verbose_name_plural': 'Higher Shivir 1 Attendances',
                'db_table': 'faceapp_hs1_attendance',
                'ordering': ['-attendance_date'],
                'unique_together': {('person', 'attendance_date')},
            },
        ),
        migrations.CreateModel(
            name='HS1_Repeaters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_attendance_date', models.DateField(help_text='When they last completed HS1')),
                ('repeat_attendance_date', models.DateField(auto_now_add=True)),
                ('days_gap', models.IntegerField()),
                ('repeat_count', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hs1_repeaters', to='faceapp.knownperson')),
            ],
            options={
                'verbose_name': 'Higher Shivir 1 Repeater',
                'verbose_name_plural': 'Higher Shivir 1 Repeaters',
                'db_table': 'faceapp_hs1_repeaters',
                'ordering': ['-repeat_attendance_date'],
            },
        ),
        migrations.CreateModel(
            name='HS2_Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateField(auto_now_add=True)),
                ('day_number', models.IntegerField(help_text='Day 1 or 2 of HS2')),
                ('is_completed', models.BooleanField(default=False, help_text='True when both days completed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hs2_attendance', to='faceapp.knownperson')),
                ('session_reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faceapp.tejgyansession')),
            ],
            options={
                'verbose_name': 'Higher Shivir 2 Attendance',
                'verbose_name_plural': 'Higher Shivir 2 Attendances',
                'db_table': 'faceapp_hs2_attendance',
                'ordering': ['-attendance_date'],
                'unique_together': {('person', 'attendance_date')},
            },
        ),
        migrations.CreateModel(
            name='HS2_Repeaters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_attendance_date', models.DateField(help_text='When they last completed HS2')),
                ('repeat_attendance_date', models.DateField(auto_now_add=True)),
                ('days_gap', models.IntegerField()),
                ('repeat_count', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hs2_repeaters', to='faceapp.knownperson')),
            ],
            options={
                'verbose_name': 'Higher Shivir 2 Repeater',
                'verbose_name_plural': 'Higher Shivir 2 Repeaters',
                'db_table': 'faceapp_hs2_repeaters',
                'ordering': ['-repeat_attendance_date'],
            },
        ),
        migrations.CreateModel(
            name='MA_Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateField(auto_now_add=True)),
                ('day_number', models.IntegerField(help_text='Day 1, 2, 3, 4, or 5 of MA')),
                ('is_completed', models.BooleanField(default=False, help_text='True when all 5 days completed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ma_attendance', to='faceapp.knownperson')),
                ('session_reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faceapp.tejgyansession')),
            ],
            options={
                'verbose_name': 'MA Shivir Attendance',
                'verbose_name_plural': 'MA Shivir Attendances',
                'db_table': 'faceapp_ma_attendance',
                'ordering': ['-attendance_date'],
            },
        ),
        migrations.CreateModel(
            name='MA_Repeaters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_attendance_date', models.DateField(help_text='When they last completed MA')),
                ('repeat_attendance_date', models.DateField(auto_now_add=True, help_text="Today's repeat attendance")),
                ('days_gap', models.IntegerField(help_text='Days between last completion and repeat')),
                ('repeat_count', models.IntegerField(default=1, help_text='1st repeat, 2nd repeat, etc.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ma_repeaters', to='faceapp.knownperson')),
            ],
            options={
                'verbose_name': 'MA Shivir Repeater',
                'verbose_name_plural': 'MA Shivir Repeaters',
                'db_table': 'faceapp_ma_repeaters',
                'ordering': ['-repeat_attendance_date'],
            },
        ),
        migrations.CreateModel(
            name='SSP1_Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateField(auto_now_add=True)),
                ('day_number', models.IntegerField(help_text='Day 1 or 2 of SSP1')),
                ('is_completed', models.BooleanField(default=False, help_text='True when both days completed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ssp1_attendance', to='faceapp.knownperson')),
                ('session_reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faceapp.tejgyansession')),
            ],
            options={
                'verbose_name': 'SSP1 Attendance',
                'verbose_name_plural': 'SSP1 Attendances',
                'db_table': 'faceapp_ssp1_attendance',
                'ordering': ['-attendance_date'],
            },
        ),
        migrations.CreateModel(
            name='SSP1_Repeaters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_attendance_date', models.DateField(help_text='When they last completed SSP1')),
                ('repeat_attendance_date', models.DateField(auto_now_add=True)),
                ('days_gap', models.IntegerField()),
                ('repeat_count', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ssp1_repeaters', to='faceapp.knownperson')),
            ],
            options={
                'verbose_name': 'SSP1 Repeater',
                'verbose_name_plural': 'SSP1 Repeaters',
                'db_table': 'faceapp_ssp1_repeaters',
                'ordering': ['-repeat_attendance_date'],
            },
        ),
        migrations.CreateModel(
            name='SSP2_Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateField(auto_now_add=True)),
                ('day_number', models.IntegerField(help_text='Day 1 or 2 of SSP2')),
                ('is_completed', models.BooleanField(default=False, help_text='True when both days completed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ssp2_attendance', to='faceapp.knownperson')),
                ('session_reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faceapp.tejgyansession')),
            ],
            options={
                'verbose_name': 'SSP2 Attendance',
                'verbose_name_plural': 'SSP2 Attendances',
                'db_table': 'faceapp_ssp2_attendance',
                'ordering': ['-attendance_date'],
            },
        ),
        migrations.CreateModel(
            name='SSP2_Repeaters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_attendance_date', models.DateField(help_text='When they last completed SSP2')),
                ('repeat_attendance_date', models.DateField(auto_now_add=True)),
                ('days_gap', models.IntegerField()),
                ('repeat_count', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ssp2_repeaters', to='faceapp.knownperson')),
            ],
            options={
                'verbose_name': 'SSP2 Repeater',
                'verbose_name_plural': 'SSP2 Repeaters',
                'db_table': 'faceapp_ssp2_repeaters',
                'ordering': ['-repeat_attendance_date'],
            },
        ),
        migrations.DeleteModel(
            name='RepeatAttendance',
        ),
        migrations.DeleteModel(
            name='SessionProgress',
        ),
        migrations.AddIndex(
            model_name='ma_attendance',
            index=models.Index(fields=['person', 'day_number'], name='faceapp_ma__person__513a1f_idx'),
        ),
        migrations.AddIndex(
            model_name='ma_attendance',
            index=models.Index(fields=['attendance_date'], name='faceapp_ma__attenda_2e0a83_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='ma_attendance',
            unique_together={('person', 'attendance_date')},
        ),
        migrations.AddIndex(
            model_name='ma_repeaters',
            index=models.Index(fields=['person', 'repeat_attendance_date'], name='faceapp_ma__person__4263f2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='ssp1_attendance',
            unique_together={('person', 'attendance_date')},
        ),
        migrations.AlterUniqueTogether(
            name='ssp2_attendance',
            unique_together={('person', 'attendance_date')},
        ),
    ]
